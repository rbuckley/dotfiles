" ========== Vim Basic Settings ============="

" Make vim incompatbile to vi.
set nocompatible
set modelines=0
filetype plugin indent on


"Changing Leader Key Needs to be done first
let mapleader = ","

" OS detection
let g:os_windows = (has('win16') || has('win32') || has('win64')) && &shellcmdflag =~ '/'
let g:os_cygwin = has('win32unix')

let s:vimDir='~/.vim'
if g:os_windows
    let s:vimDir='~/vimfiles'
endif

" ============ Bundle settings =============="
let s:bundleDir=s:vimDir . '/bundle'
let &runtimepath .= ',' . fnameescape(expand(s:bundleDir . '/vundle'))
call vundle#rc(fnameescape(expand(s:bundleDir)))
Bundle 'gmarik/vundle'

" ========== Color Schemes= ================="
Bundle 'altercation/vim-colors-solarized'
Bundle 'jonathanfilip/vim-lucius'

" =========== Powerline (statusbar) ============="
Bundle 'bling/vim-airline'
let g:airline_theme='wombat'
let g:airline_powerline_fonts=1
let g:airline#extensions#tmuxline#enabled=1
let g:airline#extensions#whitespace#enabled=0
set ttimeoutlen=50

" ========== Tagbar Settings ================"
Bundle 'majutsushi/tagbar'
" Tagbar key bindings."
nmap <leader>l <ESC>:TagbarToggle<cr>
imap <leader>l <ESC>:TagbarToggle<cr>i
let g:tagbar_autofocus = 1

let g:tagbar_type_make = {
    \ 'kinds' : [
        \ 'm:macros',
        \ 't:targets',
    \ ],
\ }

" ========== NerdTree Settings ==============="
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
" Mapping to NERDTree
nnoremap <C-n> :NERDTreeToggle<cr>
let NERDTreeIgnore=['\~$', '\.pyc$']
let NERDTreeShowBookmarks = 1 

" ======= MiniBufExplorer Settings =========="
Bundle 'fholgado/minibufexpl.vim'
" Mini Buffer some settigns."

" buffer navigation
let g:miniBufExplCycleArround = 1
nnoremap <leader><Tab>     :MBEbf<CR>
nnoremap <leader><S-Tab>     :MBEbb<CR>
"let g:did_minibufexplorer_syntax_inits = 1

" ========== ctrlp Settings ================"
Bundle 'kien/ctrlp.vim'
" ctrlp settings
" ignore virtual environments
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll|jar)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }
" dont set a limit to the files it will open
let g:ctrlp_max_files = 0
" tell ctrlp to create new files in the same window
let g:ctrlp_open_new_file = 'r'
" increase the results from 10 to 40
" on second thought dont, slowed everything done toomuch
" let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:40,results:40'
" allow cross session caching
let g:ctrlp_use_caching = 1 
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'

" ============== promptline ================"
"Bundle 'edkolev/promptline.vim'

" ============== tmux status line  ================"
Bundle 'edkolev/tmuxline.vim'
let g:tmuxline_preset = {
    \'a'    : '#(whoami)',
    \'b'    : '(#P)#W',
    \'c'    : '#h',
    \'win'  : '#I #W',
    \'cwin' : '#I #W',
    \'x'    : '%a',
    \'y'    : '(#P)#W %R',
    \'z'    : '#S'}

" ============== Snipmate ==================="
"Bundle 'msanders/snipmate.vim'

" ============= nginx highlighting ==========="
Bundle 'vim-scripts/nginx.vim'

" =========== Focus on stuff =============="
Bundle 'junegunn/goyo.vim'
let g:goyo_width = 120
let g:goyo_margin_top = 20
let g:goyo_margin_bottom = 20
nnoremap <leader>f :Goyo<CR>

" ============ C code browsing ============"
"Bundle 'vim-scripts/CCTree'

" =========== Grep Integration ============="
Bundle 'yegappan/grep'
nnoremap <silent> <leader>mm :Rgrep<CR>

" =========== Yankstack for copy pasting ====="
"Bundle 'maxbrunsfeld/vim-yankstack'
"let g:yankstack_map_keys = 0
"nmap <leader>p <Plug>yankstack_substitute_older_paste
"nmap <leader>P <Plug>yankstack_substitute_newer_paste

" =========== Outlook Integration ===="
if g:os_windows 
    Bundle 'vim-scripts/OutlookVim'
    let g:outlook_supported_body_format = 'html'
endif

" =========== Git Integration ===="
Bundle 'tpope/vim-fugitive'

" =========== DirDiff Integration ===="
"Bundle 'vim-scripts/DirDiff.vim'

" =========== VCS control ============="
Bundle 'vcscommand.vim'

" ========== tmux integration ========='
Bundle 'christoomey/vim-tmux-navigator'

" =========== Pace plugin ============"
Bundle 'rbuckley/pace.vim'

"TAB settings.
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" More Windows only settings
if g:os_windows
"   to allow swap files to be written in the temp directory
    set directory=.,$TEMP

endif

" More Common Settings.
set encoding=utf-8
set scrolloff=3
set autoindent
set noshowmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell

set nobackup
set noswapfile

set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2

" window navigation
noremap <C-Up>       <C-W>k
noremap <C-Down>     <C-W>j
noremap <C-Left>     <C-W>h
noremap <C-Right>    <C-W>l

" allows to sudo w when you forget to before hand
cmap w!! w !sudo tee % >/dev/null

"set relativenumbee
set number
set norelativenumber

"set undofile
"set shell=/bin/bash
set lazyredraw
set matchtime=3

""""
" Set title to window
set title 
" Dictionary path, from which the words are being looked up.
set dictionary=/usr/share/dict/words

" Make pasting done without any indentation break."
set pastetoggle=<F3>

" Make Vim able to edit corntab fiels again.
set backupskip=/tmp/*,/private/tmp/*"

" Enable Mouse
set mouse=a

"Settings for Searching and Moving
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
"nnoremap <tab> %
"vnoremap <tab> %


" Make Vim to handle long lines nicely.
set wrap
set textwidth=79
set formatoptions=qrn1
"set colorcolumn=79

" To  show special characters in Vim
"set list
set listchars=tab:▸\ ,eol:¬

" Naviagations using keys up/down/left/right
" Disabling default keys to learn the hjkl
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
"inoremap <up> <nop>
"inoremap <down> <nop>
"inoremap <left> <nop>
"inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" Get Rid of stupid Goddamned help keys
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Map : to ; also in command mode.
"nnoremap ; :

" Adding More Shorcuts keys using leader kye.
" Leader Kye provide separate namespace for specific commands.
",W Command to remove white space from a file.
""nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

" ,ft Fold tag, helpful for HTML editing.
nnoremap <leader>ft vatzf

" ,q Re-hardwrap Paragraph
nnoremap <leader>q gqip

" ,v Select just pasted text.
nnoremap <leader>v V`]

" ,ev Shortcut to edit and source .vimrc file on the fly on a vertical window.
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>et :e ~/.dotfiles/tmux/tmux.conf<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" search and replace the text under the cursor
nnoremap <leader>r :%s/\<<C-r><C-w>\>//g<left><left>
nnoremap <leader>rc :%s/\<<C-r><C-w>\>//gc<left><left><left>

" jj For Qicker Escaping between normal and editing mode.
"inoremap jj <ESC>
" set working directory to that of the current buffer
nnoremap <leader>h :cd %:p:h<CR>

" Working with split screen nicely
" Resize Split When the window is resized"
"augroup resize
"    au!
"    au VimResized * :wincmd =
"augroup END


" Wildmenu completion "
set wildmenu
set wildmode=list:longest
set wildignore+=.hg,.git,.svn " Version Controls"
set wildignore+=*.aux,*.out,*.toc "Latex Indermediate files"
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg "Binary Imgs"
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest "Compiled Object files"
set wildignore+=*.spl "Compiled speolling world list"
set wildignore+=*.sw? "Vim swap files"
set wildignore+=*.DS_Store "OSX SHIT"
set wildignore+=*.luac "Lua byte code"
set wildignore+=migrations "Django migrations"
set wildignore+=*.pyc "Python Object codes"
set wildignore+=*.orig "Merge resolution files"

"Make Sure that Vim returns to the same line when we reopen a file"
augroup line_return
    au!
    au BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \ execute 'normal! g`"zvzz' |
        \ endif
augroup END

nnoremap g; g;zz

" colorscheme settings
"MBE Colors
"augroup mbe_colors
"    au!
"   au ColorScheme * highlight link MBENormal               Folded 
"    au ColorScheme * highlight link MBEChanged              ErrorMsg
"    au ColorScheme * highlight link MBEVisibleNormal        Title
"    au ColorScheme * highlight link MBEVisibleChanged       Error
"    au ColorScheme * highlight link MBEVisibleActiveNormal  SpellRare
"    au ColorScheme * highlight link MBEVisibleActiveChanged Todo
"augroup END
hi link MBENormal               Folded
hi link MBEChanged              ErrorMsg
hi link MBEVisibleNormal        Title
hi link MBEVisibleChanged       Error
hi link MBEVisibleActiveNormal  SpellRare
hi link MBEVisibleActiveChanged Todo 

set t_Co=256
syntax enable
set background=dark
colorscheme lucius
LuciusBlackLowContrast


" diff settings for easy toggle
nnoremap <silent> <leader>df :call DiffToggle()<CR>
function! DiffToggle()
    if &diff
        diffoff
    else
        diffthis
    endif
endfunction

" switch between terminal and vim mouse modes
noremap <F10> :call ToggleMouse()<CR>
function! ToggleMouse()
    if !exists("s:old_mouse")
        let s:old_mouse="a"
    endif

    if &mouse == ""
        let &mouse = s:old_mouse
        echo "Mouse is for Vim (" . &mouse . ")"
    else
        let s:old_mouse = &mouse
        let &mouse=""
        echo "Mouse is for Terminal"
    endif
endfunction
" =========== END Basic Vim Settings ===========


" =========== Gvim Settings =============
if has("gui_running")
    set lines=999 columns=999
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=R
    set guioptions-=T
    if g:os_windows
        set guifont=Powerline_Consolas:h9:cANSI
        set guioptions-=e
        set guioptions-=m
        set guioptions-=g
    else
        set guifont=Powerline\ Consolas\ 10
    endif
endif
" Source the vimrc file after saving it
augroup vimrc_load
    au!
    au bufwritepost .vimrc source ~/.vimrc
augroup END

" ========== END Gvim Settings ==========

" ========== XH1 make debugging =========
set errorformat+=%f:%l:%m,%DEntering\ dir\ '%f',%XLeaving\ dir\ '%f'
